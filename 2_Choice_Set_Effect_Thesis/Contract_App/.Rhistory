shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
#if(input$graph=="Choice Cardinality"){
Data_profit<- read.xlsx("New_irrational_12.xlsx",sheet = 1)
head(Data_profit)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('rsconnect')
rsconnect::setAccountInfo(name='diegouchendu',
token='0C377460845D12084D21008E605E886C',
secret='<SECRET>')
rsconnect::setAccountInfo(name='diegouchendu',
token='0C377460845D12084D21008E605E886C',
secret='<SECRET>')
rsconnect::setAccountInfo(name='diegouchendu', token='0C377460845D12084D21008E605E886C', secret='ugNe/LAlpOZMGHnx9Od6pd1FtZ+DUv2KMgmhcTOn')
library(rsconnect)
rsconnect::deployApp('C:/Users/aduzo/Google Drive/Magdeburg/SEMESTER 6/Thesis/App')
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
library(pracma)
library(xlsx)
library(ggplot2)
library(tidyverse)
library("openxlsx")
Data<- read.xlsx("New_irrational_12.xlsx",sheet = 4)
#Data[,1:2]
#contract_set1<- read.xlsx("contract_set1.xlsx",sheet = 6)
#head(contract_set1)
oc<-1
ce<-1
contract_by_offered<-Data%>% filter(Offered_Contract==oc & Contract_Estimate== ce)
contract_by_offered
contract_by_offered%>%filter(b=="b1")
contract_by_offered%>%filter(b=="b1")%>%subset(X>0)
oc<-4
ce<-1
contract_by_offered<-Data%>% filter(Offered_Contract==oc & Contract_Estimate== ce)
contract_by_offered%>%filter(b=="b1")%>%subset(X>0)
contract_by_offered%>%filter(b=="b1")%>%subset(X>0)%>%mutate(sum(X))
contract_by_offered%>%filter(b=="b1")%>%subset(X>0)%>%sum(X)
contract_by_offered%>%filter(b=="b1")%>%subset(X>0)%>%mutate(sum(X))
probs<-contract_by_offered%>%filter(b=="b1")%>%subset(X>0)
sum(probs$X)
paste0("Choice Probability for low buyer",sum(probs$X))
paste0("No choice Probability low buyer", 1-sum(probs$X))
paste0("Choice Probability for low buyer",round(sum(probs$X),3))
paste0("No choice Probability low buyer", 1-round(sum(probs$X),3))
Data2<- read.xlsx("Existing_irrational_12_p1.xlsx",sheet = 4)
Data2<- read.xlsx("Existing_irrational_12_p1.xlsx",sheet = 4)
```
head(Data2)
oc<-4
pe<-1
contract_by_offered<-Data%>% filter(Offered_Contract==oc & Profit_Estimate== pe)
contract_by_offered<-Data2%>% filter(Offered_Contract==oc & Profit_Estimate== pe)
probs<-contract_by_offered%>%filter(b=="b1")%>%subset(X>0)
paste0("Choice Probability for low buyer",round(sum(probs$X),3))
paste0("No choice Probability low buyer", 1-round(sum(probs$X),3))
Data<- read.xlsx("New_irrational_12.xlsx",sheet = 4)
View(Data2)
rm(Data2)
head(Data)
Data%>%select(Offered_Contract,Contract_Estimate,b,X)
Data%>%select(Offered_Contract,Contract_Estimate,b,X)%>%filter(b=="b1")%>%subset(X>0)
sub_prob<-Data%>%select(Offered_Contract,Contract_Estimate,b,X)%>%filter(b=="b1")%>%subset(X>0)
sub_prob
sub_prob$Offered_Contract<- factor(sub_prob$Offered_Contract,levels = c('1','2','3','4','5'))
sub_prob$Contract_Estimate<- factor(sub_prob$Contract_Estimate,levels = c('1','2','3','4','5'))
ggplot(sub_profit,aes(x=Offered_Contract  ,y= X))+geom_bar(aes(fill= Contract_Estimate ),stat = "identity",width = 0.25)+scale_fill_brewer(palette = "Dark2")+labs(y="Choice Probability",x="Offered Contract")+facet_grid(~Contract_Estimate)+ theme_bw()+ggtitle("Offered Contract Vs Choice probability with Contract Estimate")
ggplot(sub_prob,aes(x=Offered_Contract  ,y= X))+geom_bar(aes(fill= Contract_Estimate ),stat = "identity",width = 0.25)+scale_fill_brewer(palette = "Dark2")+labs(y="Choice Probability",x="Offered Contract")+facet_grid(~Contract_Estimate)+ theme_bw()+ggtitle("Offered Contract Vs Choice probability with Contract Estimate")
prob_fun<-function(type){
sub_prob<-Data%>%select(Offered_Contract,Contract_Estimate,b,X)%>%filter(b==type)%>%subset(X>0)
sub_prob$Offered_Contract<- factor(sub_prob$Offered_Contract,levels = c('1','2','3','4','5'))
sub_prob$Contract_Estimate<- factor(sub_prob$Contract_Estimate,levels = c('1','2','3','4','5'))
return(ggplot(sub_prob,aes(x=Offered_Contract  ,y= X))+geom_bar(aes(fill= Contract_Estimate ),stat = "identity",width = 0.25)+scale_fill_brewer(palette = "Dark2")+labs(y="Choice Probability",x="Offered Contract")+facet_grid(~Contract_Estimate)+ theme_bw()+ggtitle("Offered Contract Vs Choice probability with Contract Estimate") )
}
prob_fun(type="b2")
prob_fun<-function(type){
sub_prob<-Data%>%select(Offered_Contract,Contract_Estimate,b,X)%>%filter(b==type)%>%subset(X>0)
sub_prob$Offered_Contract<- factor(sub_prob$Offered_Contract,levels = c('1','2','3','4','5','6'))
sub_prob$Contract_Estimate<- factor(sub_prob$Contract_Estimate,levels = c('1','2','3','4','5','6'))
return(ggplot(sub_prob,aes(x=Offered_Contract  ,y= X))+geom_bar(aes(fill= Contract_Estimate ),stat = "identity",width = 0.25)+scale_fill_brewer(palette = "Dark2")+labs(y="Choice Probability",x="Offered Contract")+facet_grid(~Contract_Estimate)+ theme_bw()+ggtitle("Offered Contract Vs Choice probability with Contract Estimate") )
}
prob_fun(type="b2")
Data%>%select(Offered_Contract,Contract_Estimate,b,X)%>%filter(b=='b2')%>%subset(X>0)
prob_fun<-function(type){
sub_prob<-Data%>%select(Offered_Contract,Contract_Estimate,b,X)%>%filter(b==type)%>%subset(X>0)
sub_prob$Offered_Contract<- factor(sub_prob$Offered_Contract,levels = c('1','2','3','4','5','6','7','8'))
sub_prob$Contract_Estimate<- factor(sub_prob$Contract_Estimate,levels = c('1','2','3','4','5','6','7','8','9'))
return(ggplot(sub_prob,aes(x=Offered_Contract  ,y= X))+geom_bar(aes(fill= Contract_Estimate ),stat = "identity",width = 0.25)+scale_fill_brewer(palette = "Dark2")+labs(y="Choice Probability",x="Offered Contract")+facet_grid(~Contract_Estimate)+ theme_bw()+ggtitle("Offered Contract Vs Choice probability with Contract Estimate") )
}
prob_fun(type="b2")
prob_fun<-function(type){
sub_prob<-Data%>%select(Offered_Contract,Contract_Estimate,b,X)%>%filter(b==type)%>%subset(X>0)
sub_prob$Offered_Contract<- factor(sub_prob$Offered_Contract,levels = c('1','2','3','4','5','6','7','8'))
sub_prob$Contract_Estimate<- factor(sub_prob$Contract_Estimate,levels = c('1','2','3','4','5','6','7','8'))
return(ggplot(sub_prob,aes(x=Offered_Contract  ,y= X))+geom_bar(aes(fill= Contract_Estimate ),stat = "identity",width = 0.25)+scale_fill_brewer(palette = "Dark2")+labs(y="Choice Probability",x="Offered Contract")+facet_grid(~Contract_Estimate)+ theme_bw()+ggtitle("Offered Contract Vs Choice probability with Contract Estimate") )
}
prob_fun(type="b2")
prob_fun(type="b1")
prob_fun(type="b2")
Data%>%select(Offered_Contract,Contract_Estimate,b,X)%>%filter(b=='b2')%>%subset(X>0 & Contract_Estimate<9)
prob_fun<-function(type){
sub_prob<-Data%>%select(Offered_Contract,Contract_Estimate,b,X)%>%filter(b==type)%>%subset(X>0 & Contract_Estimate<9)
sub_prob$Offered_Contract<- factor(sub_prob$Offered_Contract,levels = c('1','2','3','4','5','6','7','8'))
sub_prob$Contract_Estimate<- factor(sub_prob$Contract_Estimate,levels = c('1','2','3','4','5','6','7','8'))
return(ggplot(sub_prob,aes(x=Offered_Contract  ,y= X))+geom_bar(aes(fill= Contract_Estimate ),stat = "identity",width = 0.25)+scale_fill_brewer(palette = "Dark2")+labs(y="Choice Probability",x="Offered Contract")+facet_grid(~Contract_Estimate)+ theme_bw()+ggtitle("Offered Contract Vs Choice probability with Contract Estimate") )
}
prob_fun(type="b2")
library(shiny); runApp('app2.R')
runApp('app2.R')
#if(input$graph=="Choice Cardinality"){
Data_profit<- read.xlsx("New_irrational_12.xlsx",sheet = 1)
data3_2<-Data_profit%>% filter(Offered_Contract==input$Offered_Contract2 & Contract_Estimate== input$Estimate2)%>% select(Supplier_Profit,N0_of_Contract)
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
prob_fun(type="b1")
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
contract_set<- read.xlsx("contract_set1.xlsx",sheet = 6)
contract_set
contract_set%>%subset(Z==1)
contract_set%>%subset(Z==1)%>%mutate(sc=v+r)
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
